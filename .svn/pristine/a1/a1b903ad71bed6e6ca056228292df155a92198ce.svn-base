//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace DMS_WindowsService.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AddDocumentDMSPortBinding", Namespace="http://magma.newgen.com/")]
    public partial class DMSWebService_Raj : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback NGChangeDocumentPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNGDocumentExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchDocumentExtOperationCompleted;
        
        private System.Threading.SendOrPostCallback NGDeleteDocumentOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DMSWebService_Raj() {
            this.Url = global::DMS_WindowsService.Properties.Settings.Default.DMS_WindowsService_WebReference_DMSWebService_Raj;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event NGChangeDocumentPropertyCompletedEventHandler NGChangeDocumentPropertyCompleted;
        
        /// <remarks/>
        public event addNGDocumentExtCompletedEventHandler addNGDocumentExtCompleted;
        
        /// <remarks/>
        public event searchDocumentExtCompletedEventHandler searchDocumentExtCompleted;
        
        /// <remarks/>
        public event NGDeleteDocumentCompletedEventHandler NGDeleteDocumentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://magma.newgen.com/", ResponseNamespace="http://magma.newgen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NGChangeDocumentProperty([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Inputxml, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string User_Name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password) {
            object[] results = this.Invoke("NGChangeDocumentProperty", new object[] {
                        Inputxml,
                        User_Name,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NGChangeDocumentPropertyAsync(string Inputxml, string User_Name, string Password) {
            this.NGChangeDocumentPropertyAsync(Inputxml, User_Name, Password, null);
        }
        
        /// <remarks/>
        public void NGChangeDocumentPropertyAsync(string Inputxml, string User_Name, string Password, object userState) {
            if ((this.NGChangeDocumentPropertyOperationCompleted == null)) {
                this.NGChangeDocumentPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNGChangeDocumentPropertyOperationCompleted);
            }
            this.InvokeAsync("NGChangeDocumentProperty", new object[] {
                        Inputxml,
                        User_Name,
                        Password}, this.NGChangeDocumentPropertyOperationCompleted, userState);
        }
        
        private void OnNGChangeDocumentPropertyOperationCompleted(object arg) {
            if ((this.NGChangeDocumentPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NGChangeDocumentPropertyCompleted(this, new NGChangeDocumentPropertyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://magma.newgen.com/", ResponseNamespace="http://magma.newgen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string addNGDocumentExt([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string InputXml, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string User_Name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DocPath, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FolderName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string FolderHierarchy, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DataClassName) {
            object[] results = this.Invoke("addNGDocumentExt", new object[] {
                        InputXml,
                        User_Name,
                        Password,
                        DocPath,
                        FolderName,
                        FolderHierarchy,
                        DataClassName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addNGDocumentExtAsync(string InputXml, string User_Name, string Password, string DocPath, string FolderName, string FolderHierarchy, string DataClassName) {
            this.addNGDocumentExtAsync(InputXml, User_Name, Password, DocPath, FolderName, FolderHierarchy, DataClassName, null);
        }
        
        /// <remarks/>
        public void addNGDocumentExtAsync(string InputXml, string User_Name, string Password, string DocPath, string FolderName, string FolderHierarchy, string DataClassName, object userState) {
            if ((this.addNGDocumentExtOperationCompleted == null)) {
                this.addNGDocumentExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNGDocumentExtOperationCompleted);
            }
            this.InvokeAsync("addNGDocumentExt", new object[] {
                        InputXml,
                        User_Name,
                        Password,
                        DocPath,
                        FolderName,
                        FolderHierarchy,
                        DataClassName}, this.addNGDocumentExtOperationCompleted, userState);
        }
        
        private void OnaddNGDocumentExtOperationCompleted(object arg) {
            if ((this.addNGDocumentExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNGDocumentExtCompleted(this, new addNGDocumentExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://magma.newgen.com/", ResponseNamespace="http://magma.newgen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string searchDocumentExt([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string InputXml, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string User_Name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string DataClassName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool FTS) {
            object[] results = this.Invoke("searchDocumentExt", new object[] {
                        InputXml,
                        User_Name,
                        Password,
                        DataClassName,
                        FTS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void searchDocumentExtAsync(string InputXml, string User_Name, string Password, string DataClassName, bool FTS) {
            this.searchDocumentExtAsync(InputXml, User_Name, Password, DataClassName, FTS, null);
        }
        
        /// <remarks/>
        public void searchDocumentExtAsync(string InputXml, string User_Name, string Password, string DataClassName, bool FTS, object userState) {
            if ((this.searchDocumentExtOperationCompleted == null)) {
                this.searchDocumentExtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchDocumentExtOperationCompleted);
            }
            this.InvokeAsync("searchDocumentExt", new object[] {
                        InputXml,
                        User_Name,
                        Password,
                        DataClassName,
                        FTS}, this.searchDocumentExtOperationCompleted, userState);
        }
        
        private void OnsearchDocumentExtOperationCompleted(object arg) {
            if ((this.searchDocumentExtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchDocumentExtCompleted(this, new searchDocumentExtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://magma.newgen.com/", ResponseNamespace="http://magma.newgen.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string NGDeleteDocument([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Inputxml, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string User_Name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Password) {
            object[] results = this.Invoke("NGDeleteDocument", new object[] {
                        Inputxml,
                        User_Name,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NGDeleteDocumentAsync(string Inputxml, string User_Name, string Password) {
            this.NGDeleteDocumentAsync(Inputxml, User_Name, Password, null);
        }
        
        /// <remarks/>
        public void NGDeleteDocumentAsync(string Inputxml, string User_Name, string Password, object userState) {
            if ((this.NGDeleteDocumentOperationCompleted == null)) {
                this.NGDeleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNGDeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("NGDeleteDocument", new object[] {
                        Inputxml,
                        User_Name,
                        Password}, this.NGDeleteDocumentOperationCompleted, userState);
        }
        
        private void OnNGDeleteDocumentOperationCompleted(object arg) {
            if ((this.NGDeleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NGDeleteDocumentCompleted(this, new NGDeleteDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NGChangeDocumentPropertyCompletedEventHandler(object sender, NGChangeDocumentPropertyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NGChangeDocumentPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NGChangeDocumentPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void addNGDocumentExtCompletedEventHandler(object sender, addNGDocumentExtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addNGDocumentExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addNGDocumentExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void searchDocumentExtCompletedEventHandler(object sender, searchDocumentExtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchDocumentExtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchDocumentExtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void NGDeleteDocumentCompletedEventHandler(object sender, NGDeleteDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NGDeleteDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NGDeleteDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591